name: CI/CD Automatic Process

on:
  push:
    branches: [ "feature/*"  ]
  # pull_request:
  #   branches: [ "int-*"  ]


jobs: 

    try_replacement:
      runs-on: ubuntu-latest
      environment:
        name: development
      steps:

        - name: Checkout code
          uses: actions/checkout@v4

        - name: Try Replace
          id: replacement
          run: |
            RELEASE_BRANCH_NAME="release/prefix-whatever-1.0"
            RELEASE_SCRIPT="${RELEASE_BRANCH_NAME#release/}"
            echo "RELEASE_SCRIPT=$RELEASE_SCRIPT" >> $GITHUB_OUTPUT

        - name: Use Name
          run: |
            echo "RELEASE_SCRIPT:${{ steps.replacement.outputs.RELEASE_SCRIPT }}"
 
    create_pull_request:
      runs-on: ubuntu-latest
      environment:
        name: development
      steps:

        - name: Checkout code
          uses: actions/checkout@v4

        - name: Create Pull Request
          id: create_pr
          env:
            GH_TOKEN: ${{ github.token }}
            deply_branch: int-dev
          run: |
            PR_NUMBER=$(gh pr list --state "open" --head "${{ github.ref_name }}" --base "$deploy_branch" --json number --jq '.[0].number')
            #--head ${{ github.ref_name }} --base ${{ vars.DESTINATION_BRANCH }} .[0].number --jq 'length > 0'
            if [[ -n "$PR_NUMBER" ]]; then
              echo "PR from ${{ github.ref_name }} to ${{ vars.DESTINATION_BRANCH }} already exists with #$PR_NUMBER"
            else
              gh pr create --head ${{ github.ref_name }} --base ${{ vars.DESTINATION_BRANCH }} --title "Pull request from ${{ github.ref_name }} to ${{ vars.DESTINATION_BRANCH }}" --body-file ./.github/pr_template.md
            fi
           


    merge_pull_request:

      runs-on: ubuntu-latest
      needs: create_pull_request
      environment:
        name: development
  

      steps:
        
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Merge Pull Request
          id: create_pr
          env:
            GH_TOKEN: ${{ github.token }} 
          run: |
            PR_NUMBER=$(gh pr list --state "open" --head "${{ github.ref_name }}" --base "${{ vars.DESTINATION_BRANCH }}" --json number --jq '.[0].number')
            echo "PR_NUMBER: $PR_NUMBER"
            gh pr merge $PR_NUMBER --merge
            echo "PR #$PR_NUMBER successfully merged."
            